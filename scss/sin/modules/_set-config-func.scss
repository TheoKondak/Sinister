@use './../sininister-default-configuration' as *;
@use 'sass:map';
@use 'sass:string';

@function set-config($new-map, $original-map: $sininister-default-configuration) {
  $processing-map: ();
  $return-map: ();

  @if (type-of($new-map) == 'map') {
    @each $original-key, $original-value in $original-map {
      @each $new-key, $new-value in $new-map {
        @if $original-key == $new-key {
          @if (type-of($new-value) == 'map') {
            $processing-map: map.set($processing-map, $original-key, map.merge($original-value, $new-value));
            $return-map: map.merge($original-map, map.set($processing-map, $original-key, map.merge($original-value, $new-value)));
          } @else if (type-of($new-value) == 'string') {
            @debug 'its a string';
          } @else if (type-of($new-value) == 'list') {
            @debug 'Its a list';
          } @else if (type-of($new-value) == 'bool') {
            @debug 'Its a bool';
          }
        }
      }
    }
    @return $return-map;
  } @else {
    @error 'setConfig function was called with invalid input. Was expecting a map but instead received: #{type-of($new-map)}';
    @return null;
  }
}
