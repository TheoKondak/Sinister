@use 'sass:string';
@use 'sass:map';
@use 'sass:list';
@use '../../../../../sin.config' as *;

@use './get-func' as *;

///
/// @ignore @author Theodoros Kondakos
/// @ignore @link   https://github.com/TheoKondak
///

/// @name Color
///
/// @param  {string}  $key - A key from `colors` map that exists in `_sin.config.scss`.
/// @return {color}  - Returns a CSS color from `_sin.config.scss`
/// @example color: color(sin-config-color);

@function color($key: null) {
  // Check if input is null.

  @if (type-of($key) == 'null') {
    // Return a list of available colors
    @debug 'Color function received no input.';
    @debug 'Available colors: ';
    @each $colorId, $color in get(colors) {
      @debug ' #{$colorId}: #{$color}';
    }
    @return '---';
  } @else {
    // Check if $key is part of the colors map
    @if not map.has-key(get(colors), $key) {
      @warn 'Color function needs a valid input. It requires a color key from sinConfig. The current value is: `#{$key}`. See bellow for available colors';
      @debug 'Available colors: ';
      @each $colorId, $color in get(colors) {
        @debug ' #{$colorId}: #{$color}';
      }

      @return '---';
    } @else {
      // Value exists so return value
      @return get(colors, $key);
    }
  }
}
