@use 'sass:string';
@use 'sass:map';
@use 'sass:list';
@use '../../../../../../sin.config' as *;

@use './../private/getMap-func' as *;
@use '../../misc/box-shadow-data' as *;

/// Get the box shadow from the $box-shadow-list in order to feed it into the mixin
/// @group utility
/// @param  {number}  $box-shadow-id - The ID of the box shadow from the $box-shadow-list
/// @return {list} - Returns a list of box shadow css properties to the mixin.
@function box-shadow($box-shadow-id) {
  @if type-of($box-shadow-id) == 'number' and $box-shadow-id >= 0 and $box-shadow-id < list.length($box-shadow-list) {
    @return getMap($box-shadow-list, $box-shadow-id);
  } @else {
    @warn 'boxshadow function requires a boxshadow id number from 0 to #{list.length($box-shadow-list)}';
    @debug help($config-map: getMap($box-shadow-list), $intro-msg: 'Printing available Flex Properties:');
    @return null;
  }
}

/// Get the box shadow from the `$box-shadow-list` in order to feed it into the function
/// @group utility
/// @param  {number}  $box-shadow-id - The ID of the box shadow from the $box-shadow-list
@mixin boxshadow($box-shadow-id: 5) {
  @if type-of($box-shadow-id) == 'number' {
    box-shadow: box-shadow($box-shadow-id);
  } @else {
    @warn 'boxshadow mixin requires a boxshadow id number from 0 to #{list.length($box-shadow-list)}';
  }
}

/// `boxshadow()` mixin to become obsolete. The new mixin is this.
/// @group utility
/// @param  {number}  $box-shadow-id - The ID of the box shadow from the $box-shadow-list
@mixin box-shadow($box-shadow-id) {
  @include boxshadow($box-shadow-id);
}
