@use '../configuration' as *;

@mixin block{display: block;}
.block{@include block}

@mixin liNoDec{list-style: none}
.liDecNone{@include liNoDec}


//⚔️⚰️⚰️⚰️⚰️⚰️⚰️⚰️⚔️
//  Text Decoration
//⚔️⚰️⚰️⚰️⚰️⚰️⚰️⚰️⚔️

@mixin txtOverline{text-decoration: overline}
.txtOverline{@include txtOverline}

@mixin txtLineThrough{text-decoration: line-through}
.txtLineThrough{@include txtLineThrough}

@mixin txtUnderline{text-decoration: underline}
.txtUnderline{@include txtUnderline}



//⚔️⚰️⚰️⚰️⚰️⚰️⚰️⚰️⚔️
//  Background Image
//⚔️⚰️⚰️⚰️⚰️⚰️⚰️⚰️⚔️

// Added this for compatibility reasons and maybe will be easy to use int he future. Has a very strange syntax though
// ex syntax :   @include bgImg('images/home/home-masthead-489489790.jpg', 'rgba(#{$mmGreyDrk}, .6),rgba(#{$mmGreyDrk}, .6)');

@mixin bgImg($imgUrl: null,  $overlay: transparent, $position: center center, $size: cover, $fbColor: #666){
    background-color: $fbColor; // fallback
    background: url('#{$imgUrl}') #{$position}; // fallback
    
    background: -moz-linear-gradient(#{$overlay}), url('#{$imgUrl}') #{$position}; // FF 3.6+
    background: -webkit-gradient(#{$overlay}), url('#{$imgUrl}') #{$position}; // Safari 4+, Chrome 2+
    background: -webkit-linear-gradient(#{$overlay}), url('#{$imgUrl}') #{$position}; // Safari 5.1+, Chrome 10+
    background: -o-linear-gradient(#{$overlay}), url('#{$imgUrl}') #{$position}; // Opera 11.10
    background: linear-gradient(#{$overlay}), url('#{$imgUrl}') #{$position}; // Standard, IE10
}


//⚔️⚰️⚰️⚰️⚰️⚰️⚰️⚰️⚔️
//  BROWSER PREFIXES MIXIN
//⚔️⚰️⚰️⚰️⚰️⚰️⚰️⚰️⚔️

// Source: https://css-tricks.com/snippets/sass/mixin-prefix-properties/
// Mixin to prefix a property
// @author Hugo Giraudel
// @param {String} $property - Property name
// @param {*} $value - Property value
// @param {List} $prefixes (()) - List of prefixes to print

// Android: -webkit-
// Chrome: -webkit-
// Firefox: -moz-
// Internet Explorer: -ms-
// iOS: -webkit-
// Opera: -o-
// Safari: -webkit
$defaultPrefixes: -webkit- -moz- -ms- -o-;

@mixin prefix($property, $value, $prefixes: $defaultPrefixes) {
    @each $prefix in $prefixes {
      #{'-' + $prefix + '-' + $property}: $value;
    }
   
    // Output standard non-prefixed declaration
    #{$property}: $value;
  }

//   Usage Example:
//   .selector {
//     @include prefix(transform, rotate(45deg), webkit ms);
//   }

// .selector {
//     -webkit-transform: rotate(45deg);
//     -ms-transform: rotate(45deg);
//     transform: rotate(45deg);
//   }
